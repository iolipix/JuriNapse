#!/usr/bin/env node
/**
 * üåç‚û°Ô∏èüèõÔ∏è SCRIPT POUR REMPLACER L'IC√îNE PLAN√àTE PAR LE LOGO JURINAPSE
 * 
 * Ce script corrige l'affichage de l'ic√¥ne dans les r√©sultats Google
 * en rempla√ßant le favicon g√©n√©rique par le logo Jurinapse
 */

const fs = require('fs').promises;
const path = require('path');

console.log('üîß CORRECTION LOGO GOOGLE - JuriNapse');
console.log('=' .repeat(50));

async function fixGoogleLogo() {
  try {
    console.log('üéØ √âtape 1: Analyse du probl√®me...');
    console.log('   ‚ùå Google affiche une plan√®te g√©n√©rique');
    console.log('   ‚úÖ Objectif: Afficher le logo JuriNapse');
    
    console.log('\nüìÅ √âtape 2: V√©rification des fichiers favicon...');
    
    const frontendPublicPath = path.join(__dirname, 'frontend', 'public');
    const publicPath = path.join(__dirname, 'public');
    
    // V√©rifier les fichiers existants
    const faviconPaths = [
      path.join(frontendPublicPath, 'Favicon.png'),
      path.join(frontendPublicPath, 'favicon.svg'),
      path.join(publicPath, 'Favicon.png'),
      path.join(publicPath, 'favicon.svg')
    ];
    
    for (const faviconPath of faviconPaths) {
      try {
        const stats = await fs.stat(faviconPath);
        console.log(`   üìÑ ${faviconPath} - ${(stats.size / 1024).toFixed(2)}KB`);
      } catch (error) {
        console.log(`   ‚ùå ${faviconPath} - Non trouv√©`);
      }
    }
    
    console.log('\nüîç √âtape 3: Analyse des m√©tadonn√©es HTML...');
    
    const htmlFiles = [
      path.join(__dirname, 'frontend', 'index.html'),
      path.join(__dirname, 'index.html')
    ];
    
    for (const htmlFile of htmlFiles) {
      try {
        const content = await fs.readFile(htmlFile, 'utf8');
        
        console.log(`\nüìã ${htmlFile}:`);
        
        // V√©rifier les liens favicon
        const faviconLinks = content.match(/<link[^>]*rel="[^"]*icon[^"]*"[^>]*>/gi) || [];
        faviconLinks.forEach(link => {
          console.log(`   üîó ${link}`);
        });
        
        // V√©rifier les m√©tadonn√©es Open Graph
        const ogImage = content.match(/<meta[^>]*property="og:image"[^>]*>/gi) || [];
        ogImage.forEach(meta => {
          console.log(`   üì∑ ${meta}`);
        });
        
        // V√©rifier les m√©tadonn√©es Twitter
        const twitterImage = content.match(/<meta[^>]*name="twitter:image"[^>]*>/gi) || [];
        twitterImage.forEach(meta => {
          console.log(`   üê¶ ${meta}`);
        });
        
      } catch (error) {
        console.log(`   ‚ùå ${htmlFile} - Non trouv√©`);
      }
    }
    
    console.log('\nüí° SOLUTIONS RECOMMAND√âES:');
    console.log('=' .repeat(50));
    
    console.log('\n1Ô∏è‚É£ REMPLACER LE FAVICON:');
    console.log('   ‚Ä¢ Cr√©er un logo JuriNapse en 32x32, 64x64, 128x128, 256x256');
    console.log('   ‚Ä¢ Formats: .ico, .png, .svg');
    console.log('   ‚Ä¢ Remplacer frontend/public/Favicon.png');
    
    console.log('\n2Ô∏è‚É£ AJOUTER IMAGE OPEN GRAPH:');
    console.log('   ‚Ä¢ Cr√©er une image 1200x630px avec logo JuriNapse');
    console.log('   ‚Ä¢ Ajouter og:image et twitter:image pointant vers cette image');
    
    console.log('\n3Ô∏è‚É£ AM√âLIORER LES M√âTADONN√âES:');
    console.log('   ‚Ä¢ Ajouter des tailles multiples de favicon');
    console.log('   ‚Ä¢ Ajouter apple-touch-icon');
    console.log('   ‚Ä¢ Ajouter manifest.json pour PWA');
    
    console.log('\n4Ô∏è‚É£ FORCER LA MISE √Ä JOUR GOOGLE:');
    console.log('   ‚Ä¢ Ajouter un cache-buster aux URLs des images');
    console.log('   ‚Ä¢ Soumettre √† Google Search Console');
    console.log('   ‚Ä¢ D√©lai: 1-2 semaines pour mise √† jour');
    
    console.log('\nüöÄ PROCHAINES √âTAPES:');
    console.log('   1. Cr√©er votre logo JuriNapse aux bonnes dimensions');
    console.log('   2. Ex√©cuter le script de mise √† jour');
    console.log('   3. Tester avec les outils de d√©bogage social media');
    
  } catch (error) {
    console.error('‚ùå Erreur:', error);
  }
}

// Cr√©er un template pour les nouvelles m√©tadonn√©es
function generateImprovedMetadata() {
  return `
<!-- Favicons multiples pour compatibilit√© maximale -->
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png?v=2024">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png?v=2024">
<link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png?v=2024">
<link rel="icon" type="image/svg+xml" href="/favicon.svg?v=2024">
<link rel="shortcut icon" href="/favicon.ico?v=2024">

<!-- Apple Touch Icons -->
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png?v=2024">

<!-- Open Graph optimis√© pour JuriNapse -->
<meta property="og:type" content="website" />
<meta property="og:title" content="Jurinapse - Plateforme sociale pour la communaut√© juridique" />
<meta property="og:description" content="Connectez-vous avec des √©tudiants et professionnels du droit. Partagez vos connaissances et d√©veloppez votre r√©seau professionnel." />
<meta property="og:image" content="/jurinapse-og-image.png?v=2024" />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:image:type" content="image/png" />

<!-- Twitter Cards -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content="Jurinapse - Plateforme sociale pour la communaut√© juridique" />
<meta name="twitter:description" content="Connectez-vous avec des √©tudiants et professionnels du droit" />
<meta name="twitter:image" content="/jurinapse-og-image.png?v=2024" />

<!-- Theme color pour mobile -->
<meta name="theme-color" content="#3b82f6">
<meta name="msapplication-TileColor" content="#3b82f6">
`;
}

console.log('\nüìù TEMPLATE M√âTADONN√âES AM√âLIOR√âES:');
console.log(generateImprovedMetadata());

if (require.main === module) {
  fixGoogleLogo();
}

module.exports = { fixGoogleLogo, generateImprovedMetadata };
