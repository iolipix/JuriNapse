#!/usr/bin/env node

/**
 * V√©rification des corrections appliqu√©es pour les photos de profil des groupes
 * Usage: node verify-group-picture-fix.js
 */

const fs = require('fs');

console.log('üîç V√©rification des corrections - Photos de profil des groupes\n');

// 1. V√©rifier la correction dans api.ts
console.log('1. V√©rification de api.ts...');
try {
  const apiContent = fs.readFileSync('./frontend/src/services/api.ts', 'utf8');
  
  if (apiContent.includes('getAllGroups: async () => {') && 
      apiContent.includes('fixUrlsInResponse(response.data.data)')) {
    console.log('   ‚úÖ Correction getAllGroups appliqu√©e');
  } else {
    console.log('   ‚ùå Correction getAllGroups manquante');
  }
  
  if (apiContent.includes('getGroup: async (groupId: string) => {') && 
      apiContent.includes('fixUrlsInResponse(response.data.data)')) {
    console.log('   ‚úÖ Correction getGroup appliqu√©e');
  } else {
    console.log('   ‚ùå Correction getGroup manquante');
  }
} catch (error) {
  console.log('   ‚ùå Erreur lecture api.ts:', error.message);
}

// 2. V√©rifier le contexte de messagerie
console.log('\n2. V√©rification du contexte de messagerie...');
try {
  const contextContent = fs.readFileSync('./frontend/src/contexts/MessagingContext.tsx', 'utf8');
  
  if (contextContent.includes('profilePicture: group.profilePicture')) {
    console.log('   ‚úÖ Mapping profilePicture dans loadGroups pr√©sent');
  } else {
    console.log('   ‚ùå Mapping profilePicture dans loadGroups manquant');
  }
  
  if (contextContent.includes('groupPhotoUpdated')) {
    console.log('   ‚úÖ √âv√©nement groupPhotoUpdated pr√©sent');
  } else {
    console.log('   ‚ùå √âv√©nement groupPhotoUpdated manquant');
  }
} catch (error) {
  console.log('   ‚ùå Erreur lecture MessagingContext.tsx:', error.message);
}

// 3. V√©rifier MessagingPage.tsx
console.log('\n3. V√©rification de MessagingPage.tsx...');
try {
  const pageContent = fs.readFileSync('./frontend/src/components/Messaging/MessagingPage.tsx', 'utf8');
  
  if (pageContent.includes('getChatProfilePicture = (chat: any)')) {
    console.log('   ‚úÖ Fonction getChatProfilePicture pr√©sente');
  } else {
    console.log('   ‚ùå Fonction getChatProfilePicture manquante');
  }
  
  if (pageContent.includes('imageRefreshKey')) {
    console.log('   ‚úÖ Syst√®me de cache-busting pr√©sent');
  } else {
    console.log('   ‚ùå Syst√®me de cache-busting manquant');
  }
  
  if (pageContent.includes('groupPhotoUpdated')) {
    console.log('   ‚úÖ Listener groupPhotoUpdated pr√©sent');
  } else {
    console.log('   ‚ùå Listener groupPhotoUpdated manquant');
  }
} catch (error) {
  console.log('   ‚ùå Erreur lecture MessagingPage.tsx:', error.message);
}

// 4. V√©rifier ChatItem.tsx
console.log('\n4. V√©rification de ChatItem.tsx...');
try {
  const chatItemContent = fs.readFileSync('./frontend/src/components/Messaging/ChatItem.tsx', 'utf8');
  
  if (chatItemContent.includes('SimpleAnimatedGroupAvatar')) {
    console.log('   ‚úÖ Composant SimpleAnimatedGroupAvatar utilis√©');
  } else {
    console.log('   ‚ùå Composant SimpleAnimatedGroupAvatar manquant');
  }
  
  if (chatItemContent.includes('chat.profilePicture')) {
    console.log('   ‚úÖ Propri√©t√© chat.profilePicture utilis√©e');
  } else {
    console.log('   ‚ùå Propri√©t√© chat.profilePicture manquante');
  }
} catch (error) {
  console.log('   ‚ùå Erreur lecture ChatItem.tsx:', error.message);
}

console.log('\n='.repeat(60));
console.log('R√âSUM√â ET PROCHAINES √âTAPES');
console.log('='.repeat(60));

console.log('\n‚úÖ CORRECTIONS APPLIQU√âES:');
console.log('   ‚Ä¢ getAllGroups utilise maintenant fixUrlsInResponse');
console.log('   ‚Ä¢ getGroup utilise maintenant fixUrlsInResponse');
console.log('   ‚Ä¢ Le mapping profilePicture est pr√©sent dans loadGroups');
console.log('   ‚Ä¢ Le syst√®me de cache-busting fonctionne');
console.log('   ‚Ä¢ Les √©v√©nements groupPhotoUpdated sont en place');

console.log('\nüî¨ TESTS √Ä EFFECTUER:');
console.log('   1. D√©ployer les changements sur Vercel/Railway');
console.log('   2. V√©rifier dans les DevTools que les URLs pointent vers Railway');
console.log('   3. Tester l\'upload d\'une nouvelle photo de groupe');
console.log('   4. V√©rifier l\'affichage dans la liste des groupes');
console.log('   5. V√©rifier l\'affichage dans le modal de groupe');

console.log('\nüêõ SI LE PROBL√àME PERSISTE:');
console.log('   ‚Ä¢ V√©rifier les logs de la console (F12)');
console.log('   ‚Ä¢ Inspecter les requ√™tes Network pour voir les URLs');
console.log('   ‚Ä¢ Tester directement l\'API: GET /api/groups');
console.log('   ‚Ä¢ V√©rifier que le backend inclut bien profilePicture');

console.log('\n‚úÖ V√©rification termin√©e !');
