const axios = require('axios');

const BASE_URL = 'https://jurinapse-production.up.railway.app';

async function diagnosticTheophaneAccount() {
  try {
    console.log('üîç Diagnostic complet du compte theophane_mry...\n');
    
    // Utiliser la route de diagnostic que j'ai cr√©√©e dans le backend
    console.log('üìä R√©cup√©ration des donn√©es du compte via API diagnostic...');
    
    try {
      // Cr√©er une route de diagnostic temporaire pour voir les donn√©es
      const diagnosticResponse = await axios.get(`${BASE_URL}/api/diagnostic/user-info/theophane_mry`);
      console.log('‚úÖ Donn√©es trouv√©es:', JSON.stringify(diagnosticResponse.data, null, 2));
    } catch (error) {
      if (error.response?.status === 404) {
        console.log('‚ùå Compte theophane_mry introuvable dans la base !');
        
        // Tester avec l'ID direct
        try {
          const idResponse = await axios.get(`${BASE_URL}/api/diagnostic/user-info/68b25c61a29835348429424a`);
          console.log('‚úÖ Compte trouv√© par ID:', JSON.stringify(idResponse.data, null, 2));
        } catch (idError) {
          console.log('‚ùå Compte introuvable m√™me par ID');
        }
      } else {
        console.log('‚ùå Erreur diagnostic:', error.response?.data || error.message);
      }
    }
    
    console.log('\n' + '='.repeat(50));
    
    // Test avec diff√©rents mots de passe possibles
    console.log('\nüîë Test avec diff√©rents mots de passe:');
    const passwords = ['password123', 'admin123', 'theophane123', 'motdepasse'];
    
    for (const password of passwords) {
      try {
        const loginResponse = await axios.post(`${BASE_URL}/api/auth/login`, {
          emailOrPseudo: 'theophane_mry',
          password: password
        });
        console.log(`‚úÖ LOGIN R√âUSSI avec mot de passe: ${password}`);
        break;
      } catch (error) {
        console.log(`‚ùå √âchec avec: ${password}`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error.message);
  }
}

diagnosticTheophaneAccount();
